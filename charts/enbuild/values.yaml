## @section Global parameters
## @param global.AppVersion [nullable,string] [default: ""] Provide custom appVersion, to override the default one. All the ENBUILD images will be of the same version. To use indidual tag for each service set the tag on per service basis.
## @param global.domain [default: ijuned.com] What domain to use to expose the ENBUILD using istio or Ingress
## @param global.disable_tls_gitlab [default: false] Set to true if you are using self-signed certificates
## @param global.ingress.enabled [default: false] Should we create the Ingress Resources ?
## @param global.ingress.tls [default: false] Is Ingress TLS enabled ?
## @param global.ingress.tls_secret [string] If Ingress is TLS enabled, Provide the Secret for the TLS Certificate.
## @param global.ingress.classname [string] Ingress classname if enabled.
## @param global.ingress.annotations [array] Ingress annotations if enabled.
## @param global.istio.enabled [default: false]   Should we create the Istio Resources ?
## @param global.istio.gateway Istio gateway to use for creating Virtual Service.
## @param global.image.registry [default: registry.gitlab.com]  Container registry to pull images from
## @param global.image.pullPolicy [default: Always]  Container imagePullPolicy
## @param global.image.registry_credentials [nullable,object] if the image.registry is private container registry, provide the credentials
## @param global.image.registry_credentials.username [nullable,string]  Container registry Username
## @param global.image.registry_credentials.password  [nullable,string] Container registry password
## @param global.monitoring.enabled  [default: false] Should we install loki-stack for monitoring , if yes set to true , set the lok-stack values in the values.yaml
## @param global.headlamp.enabled  [default: false] Should we install headlamp for operations , if yes set to true , set the headlamp values in the values.yaml
##
global:
  AppVersion: ""
  domain: ijuned.com
  disable_tls_gitlab: false  # Set to true if you are using self-signed certificates
  monitoring:
    enabled: false
  headlamp:
    enabled: false
  ingress:
    enabled: false
    tls: false
    tls_secret: vivplatform-cert
    classname:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
  istio:
    enabled: false
    gateway: istio-system/main
  image:
    registry: registry.gitlab.com
    pullPolicy: Always
    registry_credentials: {}
    # username: registry_user_name
    # password: registry_password

## @section ENBUILD Backend Services parameters
## @param jupyter.enabled [default: false] Should we deploy the jupyterhub server
## @skip jupyterhub
jupyterhub:
  enabled: false
  proxy:
    service:
      type: ClusterIP
  hub:
    baseUrl: /jupyter
    config:
      JupyterHub:
        authenticator_class: dummy
        allow_named_servers: False
      Authenticator:
        auto_login: false
  cull:
    enabled: true
  singleuser:
    image:
      pullPolicy: Always
    profileList:
      - display_name: "CDAO Reliable AI Instance"
        description: "Includes base Reliable AI Security Toolkit Python Tools - Counterfit, Foolbox and Armory"
        default: true
      - display_name: "CDAO Reliable AI Datascience Instance"
        description: "Includes base Reliable AI Explainability Toolkit Python Tools - XAITK - Saliency, lime, Shap, Explainer Dashboard"
        kubespawner_override:
          image: jupyter/scipy-notebook:latest
      - display_name: "Spark environment"
        description: "The Jupyter Stacks spark image!"
        # kubespawner_override:
        #   image: jupyter/all-spark-notebook:2343e33dec46


## @section ENBUILD RabbitMQ parameters
## @param rabbitmq.enabled  [default: true] Set to false to use existing RabbitMQ
## @param rabbitmq.replicaCount  RabbitMQ replicaCount
## @param rabbitmq.auth.username  RabbitMQ username
## @param rabbitmq.auth.password  RabbitMQ password
## @param rabbitmq.auth.erlangCookie  RabbitMQ erlangCookie
## @skip rabbitmq.clustering
## @param rabbitmq.host [nullable,string] If `rabbitmq.enabled` is false , provide the right rabbitmq endpoint
## @skip rabbitmq.env
## @param rabbitmq.queue_prefix Queue Prefix for all RabbitMQ Queues
rabbitmq:
  enabled: true
  replicaCount: 1
  auth:
    username: admin
    password: SuperSecret
    erlangCookie: lamba
  clustering:
    forceBoot: true
  host: rabbitmq.rabbitmq # Needed only rabbitmq.enabled is false
  env: prod
  queue_prefix: enbuild

## @section ENBUILD Backend/DB parameters
## @param mongodb.enabled  [default: false] Set to true to Deploy the MongoDB.
## @param mongodb.mongo_root_username [string] DB username. If `mongodb.enabled` this is used to to set the username. Else this is username for existing Cosmos or DocumentDB
## @param mongodb.mongo_root_password [string]  DB Password. If `mongodb.enabled` this is used to to set the password. Else this is password for existing Cosmos or DocumentDB
## @param mongodb.mongo_server [nullable,string] If `mongodb.enabled` is false , provide the right cosmosDB/DocumentDB endpoint
## @param mongodb.image.repository Container repository for mongodb Container
## @param mongodb.image.tag Container tag for mongodb Container
mongodb:
  enabled: true
  mongo_root_username: "enbuild"
  mongo_root_password: "mongo_root_password"
  mongo_server: "If you are using cosmosDB then set the right cosmosDB endpoint as mongo_server and set the enabled=false"
  image:
    repository: enbuild-staging/vivsoft-platform-ui/mongodb
    tag: 4.4.5

## @section ENBUILD UI Services parameters
## @param enbuildUi.image.repository  Container repository for enbuildUi
## @param enbuildUi.image.tag  [nullable] Container image tag. Skip to use the HelmChart appVersion as Image Tag
## @param enbuildUi.replicas Container enbuildUI Replicas
## @param enbuildUi.service_type  enbuildUI service_type
## @param enbuildUi.node_port  enbuildUI node_port
## @param enbuildUi.hostname  enbuild service hostname. `enbuildUi.hostname`.`global.domain` becomes your FQDN
## @param enbuildUi.kiali_url  kiali_url
## @param enbuildUi.grafana_url  grafana_url
## @param enbuildUi.loki_url  loki_url
## @param enbuildUi.kubecost_url  kubecost_url
enbuildUi:
  image:
    repository: enbuild-staging/vivsoft-platform-ui/enbuild-frontend
  replicas: 1
  service_type: ClusterIP
  node_port: 30080
  hostname: enbuild # hostname.domain become FQDN
  kiali_url: "/kiali/"
  grafana_url: "/grafana/d/os6Bh8Omk/kubernetes-cluster?orgId=1&refresh=30s"
  loki_url: "/grafana/d/liz0yRCZz/logs-app?orgId=1"
  kubecost_url: "kubecost/overview.html"

## @section ENBUILD Backend Services parameters
## @param enbuildBk.image.repository  Container repository for enbuildBk
## @param enbuildBk.image.tag  [nullable] Container image tag. Skip to use the HelmChart appVersion as Image Tag
## @param enbuildBk.replicas Container enbuildBk Replicas
## @param enbuildBk.service_type  enbuildBk service_type
## @param enbuildBk.encryption_key  encryption_key to be used by Backend
enbuildBk:
  image:
    repository: enbuild-staging/vivsoft-platform-ui/enbuild-backend
  replicas: 1
  service_type: ClusterIP
  encryption_key: "encryption_key"

## @section ENBUILD USER Services parameters
## @param enbuildUser.image.repository  Container repository for enbuildUser
## @param enbuildUser.image.tag [nullable] Container image tag. Skip to use the HelmChart appVersion as Image Tag
## @param enbuildUser.replicas Container enbuildUser Replicas
## @param enbuildUser.service_type  enbuildUser service_type
enbuildUser:
  image:
    repository: enbuild-staging/vivsoft-platform-ui/enbuild-user
  replicas: 1
  service_type: ClusterIP

## @section ENBUILD MQ Consumer Services parameters
## @param enbuildConsumer.image.repository  Container repository for enbuildConsumer
## @param enbuildConsumer.image.tag [nullable] Container image tag. Skip to use the HelmChart appVersion as Image Tag
## @param enbuildConsumer.replicas Container enbuildConsumer Replicas
enbuildConsumer:
  image:
    repository: enbuild-staging/vivsoft-platform-ui/enbuild-mq-consumer
  replicas: 1

## @section ENBUILD AI Services parameters
## @param enbuildAI.enabled [default: false] Should we create the ENBUILD AI microservice, which also controls whether or not to install Ollama.
## @param enbuildAI.image.repository  Container repository for enbuildAI
## @param enbuildAI.image.tag  [nullable] Container image tag. Skip to use the HelmChart appVersion as Image Tag
## @param enbuildAI.replicas Container enbuilAI Replicas
## @param enbuildAI.service_type  enbuildAI service_type
## @param enbuildAI.api_key  api_key [default: "dummy"] for OpenAI service if you planning to use OpenAI service
## @param enbuildAI.ollama.enabled [default: "ollama/llama3.1"] model_name for OpenAI service.
## @param enbuildAI.model_name [default: "ollama/llama3.1"] model_name for OpenAI service.
## @param enbuildAI.ollama_endpoint [default: "http://open-webui-ollama:11434"] ollama_endpoint for OpenAI service.
enbuildAI:
  enabled: false
  ollama:
    enabled: false # Set to true to install Ollama
  model_name: "ollama/llama3.1"
  api_key: "dummy"
  ollama_endpoint: "http://open-webui-ollama:11434"
  image:
    repository: enbuild-staging/vivsoft-platform-ui/enbuild-ai
  replicas: 1
  service_type: ClusterIP

## @skip open-webui
open-webui:
  ollama:
    enabled: true
    image:
      tag: "0.3.1"
    ollama:
      gpu:
        enabled: false
        type: 'nvidia'
        number: 1
      models:
        - llama3.2:1b
    runtimeClassName: ""
    persistentVolume:
      enabled: true

## @skip loki-stack
## @skip loki-stack.grafana
loki-stack:
  test_pod:
    enabled: false
  loki:
    enabled: true
  promtail:
    enabled: true
    config:
      clients:
        - url: http://{{ .Release.Name }}-loki:3100/loki/api/v1/push
  fluent-bit:
    enabled: false
  prometheus:
    enabled: true
  filebeat:
    enabled: false
  logstash:
    enabled: false
  grafana:
    enabled: true
    testFramework:
      enabled: false
    persistence:
      enabled: true
    adminPassword: V1v$oftR0ck5
    adminUser: admin
    dashboards:
      default:
        Logs_App:
          gnetId: 13639
          revision: 1
          datasource: Loki
        Kubernetes_Cluster:
          gnetId: 7249
          revision: 1
          datasource: Prometheus
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
    grafana.ini:
      preferences:
        theme: light
      auth:
        disable_login_form: false
        auto_login: true
      auth.basic:
        enabled: true
      auth.anonymous:
        enabled: true
      security:
        allow_embedding: true
      feature_toggles:
        accessTokenExpirationCheck: true
      server:
        domain: enbuild.{{ .Values.global.domain }}
        root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
        serve_from_sub_path: false

##@skip headlamp
headlamp:
  # Default values for headlamp.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  # -- Number of desired pods
  replicaCount: 1

  image:
    # -- Container image registry
    registry: ghcr.io
    # -- Container image name
    repository: headlamp-k8s/headlamp
    # -- Image pull policy. One of Always, Never, IfNotPresent
    pullPolicy: IfNotPresent
    # -- Container image tag, If "" uses appVersion in Chart.yaml
    tag: ""

  # -- An optional list of references to secrets in the same namespace to use for pulling any of the images used
  imagePullSecrets: []
  # -- Overrides the name of the chart
  nameOverride: ""
  # -- Overrides the full name of the chart
  fullnameOverride: ""

  # -- An optional list of init containers to be run before the main containers.
  initContainers:
  - command:
    - /bin/sh
    - -c
    - mkdir -p /build/plugins && cp -r /plugins/* /build/plugins/
    # image: knrt10/headlamp-plugins-test:latest # it has all the plugins
    # image: ghcr.io/orange-cloudfoundry/headlamp-plugin:latest # no dynamic clusters plugin
    image: ghcr.io/vivsoftorg/enbuild-headlamp-theme:0.0.1
    imagePullPolicy: IfNotPresent
    name: headlamp-plugins
    volumeMounts:
    - mountPath: /build/plugins
      name: headlamp-plugins

  - command:
      - /bin/sh
      - "-c"
      - |
        kubectl config set-cluster main --server=https://kubernetes.default.svc --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        kubectl config set-credentials main --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
        kubectl config set-context main --cluster=main --user=main
        kubectl config use-context main
    env:
      - name: KUBERNETES_SERVICE_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBECONFIG
        value: /home/headlamp/.config/Headlamp/kubeconfigs/config
    image: bitnami/kubectl:1.32.0
    name: create-kubeconfig
    securityContext:
      capabilities:
        drop:
          - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsGroup: 101
      runAsNonRoot: true
      runAsUser: 100
    volumeMounts:
      - mountPath: /home/headlamp/.config/Headlamp/kubeconfigs
        name: kubeconfig

  config:
    # -- base url path at which headlamp should run
    baseURL: "/headlamp"
    oidc:
      # Option 1:
      # @param config.oidc.secret - OIDC secret configuration
      # If you want to use an existing secret, set create to false and provide the name of the secret.
      # If you want to create a new secret, set create to true and provide the name of the secret.
      # Also provide the values for clientID, clientSecret, issuerURL, and scopes.
      # Example:
      # config:
      #   oidc:
      #     secret:
      #       create: true
      #       name: oidc
      secret:
        # -- Generate OIDC secret. If true, will generate a secret using .config.oidc.
        create: false
        # -- Name of the OIDC secret.
        name: oidc

      # Option 2:
      # @param config.oidc - OIDC env configuration
      # If you want to set the OIDC configuration directly, set the following values.
      # Example:
      # config:
      #   oidc:
      #     clientID: "clientID"
      #     clientSecret: "clientSecret"
      #     issuerURL: "issuerURL"
      #     scopes: "scopes"
      # Option 3:
      # @param config.oidc - External OIDC secret configuration
      # If you want to use an external secret for OIDC configuration, enable this option.
      # Provide the name of the secret to use.
      # Example:
      # config:
      #   oidc:
      #     secret:
      #       create: false
      #     externalSecret:
      #       enabled: true
      #       name: oidc
      externalSecret:
        enabled: false
        name: ""
    # -- directory to look for plugins
    pluginsDir: "/build/plugins"
    # Extra arguments that can be given to the container. See charts/headlamp/README.md for more information.
    extraArgs:
    - "-enable-dynamic-clusters"

  # -- An optional list of environment variables
  # env:
  #   - name: KUBERNETES_SERVICE_HOST
  #     value: "localhost"
  #   - name: KUBERNETES_SERVICE_PORT
  #     value: "6443"

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.(If not set and create is true, a name is generated using the fullname template)
    name: ""

  clusterRoleBinding:
    # -- Specified whether a cluster role binding should be created
    create: true
    # -- Annotations to add to the cluster role binding
    annotations: {}

  # -- Annotations to add to the pod
  podAnnotations: {}

  # -- Headlamp pod's Security Context
  podSecurityContext:
    {}
    # fsGroup: 2000

  # -- Headlamp containers Security Context
  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    runAsNonRoot: true
    privileged: false
    runAsUser: 100
    runAsGroup: 101

  service:
    # -- Kubernetes Service type
    type: ClusterIP
    # -- Kubernetes Service port
    port: 80

  # -- Headlamp containers volume mounts
  volumeMounts:
  - mountPath: /build/plugins
    name: headlamp-plugins

  - mountPath: /home/headlamp/.config/Headlamp/kubeconfigs/config
    name: kubeconfig
    readOnly: true
    subPath: config

  # -- Headlamp pod's volumes
  volumes:
  - name: headlamp-plugins
    persistentVolumeClaim:
      claimName: enbuild-headlamp
  - name: kubeconfig
    emptyDir: {}

  persistentVolumeClaim:
    # -- Enable Persistent Volume Claim
    enabled: true
    # -- Annotations to add to the persistent volume claim (if enabled)
    annotations:
      {}
    # -- accessModes for the persistent volume claim, eg: ReadWriteOnce, ReadOnlyMany, ReadWriteMany etc.
    accessModes:
    - ReadWriteOnce
    # -- size of the persistent volume claim, eg: 10Gi. Required if enabled is true.
    size: "1Gi"
    # -- storageClassName for the persistent volume claim.
    storageClassName: ""
    # -- selector for the persistent volume claim.
    selector: {}
    # -- volumeMode for the persistent volume claim, eg: Filesystem, Block.
    volumeMode: ""

  ingress:
    # -- Enable ingress controller resource
    enabled: false
    # -- Annotations for Ingress resource
    annotations:
      {}
      # kubernetes.io/tls-acme: "true"

    # -- Ingress class name. replacement for the deprecated "kubernetes.io/ingress.class" annotation
    ingressClassName: ""

    # -- Hostname(s) for the Ingress resource
    # Please refer to https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/#IngressSpec for more information.
    hosts:
      []
      # - host: chart-example.local
      #   paths:
      #   - path: /
      #     type: ImplementationSpecific
    # -- Ingress TLS configuration
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- CPU/Memory resource requests/limits
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Node labels for pod assignment
  nodeSelector: {}

  # -- Toleration labels for pod assignment
  tolerations: []

  # -- Affinity settings for pod assignment
  affinity: {}
